import { Button, VerticalBox, AboutSlint, HorizontalBox } from "std-widgets.slint";

component RepeatedImage {
    //preferred-height: 100%;
    //preferred-width: 100%;
    in property <image> source;
    in property <color> colorize;
    Rectangle {
        clip: true;
        HorizontalLayout {
            for _ in 10 : VerticalLayout {
                for _ in 10 : Image {
                    source: root.source;
                    colorize: root.colorize;
                }
            }
        }
    }
}

component Dingus {
    in-out property <float> level: 0.50;
    Rectangle {
        x: root.width - self.width - 20px;
        y: 20px;

        width: 250px;
        height: 250px;

        Path {
            stroke-width: 20px;
            stroke: #e0e0e0;
            MoveTo {
                x: 50;
                y: 10;
            }

            ArcTo {
                radius-x: 40;
                radius-y: 40;
                x-rotation: 0;
                large-arc: true;
                sweep: true;
                x: 50 + 40*cos(level * 360deg);
                y: 50 + 40*sin(level * 360deg);
            }
        }
        }
}

export component AppWindow inherits Window {
    in-out property <bool> logged_in: false;
    in-out property <string> uid: "";
    in-out property <string> name: "";
    in-out property <int> credits: -1;
    in-out property <image> profile_picture: @image-url("./scan-id.svg");
    in-out property <int> radius;
    private property <float> tick_2s: mod(animation-tick(), 2s) / 2s;
    private property <float> tick_5s: mod(animation-tick(), 5s) / 5s;
    private property <float> tick_20s: mod(animation-tick(), 20s) / 20s;
    out property <int> max_seconds_to_logout: 10;
    in property <int> seconds_to_logout: max_seconds_to_logout;
    private property <float> percent_to_logout: 0.99 - (seconds_to_logout / max_seconds_to_logout);
    no-frame: true;
    default-font-family: "DejaVu Sans";
    default-font-size: 35px;
    default-font-weight: 800;

    Rectangle {
        background: #B0197E;
        Image {
            height: (self.opacity > 0 ? sin(tick_2s * 360deg) * 50px : 0px) + 300px;
            source: @image-url("./scan-id.svg");
            colorize: white;
            vertical-alignment: center;
            //opacity: logged_in ? 0 : 1;

            animate opacity {
                easing: ease-in;
                duration: 300ms;
            }
        }
    }

    circle := Path {
        fill: #41013C;
        width: logged_in ? 400% : 0%;
        height: logged_in ? 400% : 0%;
        x: parent.width - self.width / 2;
        y: parent.height - self.height / 2;

        animate width {
            delay: 100ms;
            duration: 1000ms;
            easing: ease-in-out;
        }

        animate height {
            delay: 100ms;
            duration: 1000ms;
            easing: ease-in-out;
        }

        MoveTo {
            x: -1;
            y: 0;
        }

        ArcTo {
            radius-x: 1;
            radius-y: 1;
            sweep: true;
            large-arc: false;
            x: 2;
            y: 0;
        }
    }

    Rectangle {
        opacity: circle.width > parent.width * 3 ? 1 : 0;

        animate opacity {
            duration: 100ms;
            easing: linear;
        }

        RepeatedImage {
            source: @image-url("./csh-tile.svg");
            colorize: #380033;
            y: (tick_5s * 400px) - 400px;
            x: (tick_20s * -400px);
        }


        HorizontalLayout {
            alignment: center;

            VerticalLayout {
                alignment: center;

                Rectangle {

                    HorizontalLayout {
                        padding: 16px;
                        padding-left: 0px;

                        alignment: start;
                        Rectangle {
                            Rectangle {
                                clip: true;
                                background: #41013C;
                                border-radius: 20px;
                                width: 256px;
                                height: 256px;

                                Image {
                                    source: profile_picture;
                                    width: 256px;
                                    height: 256px;
                                    horizontal-alignment: center;
                                }
                            }
                        }

                        VerticalLayout {
                            alignment: start;
                            HorizontalLayout {
                                alignment: start;
                                spacing: 8px;

                                Text {
                                    text: name;
                                    color: white;
                                }

                                Text {
                                    text: "(" + uid + ")";
                                    color: gray;
                                }
                            }

                            Text {
                                text: credits + " Credit" + (credits > 1 ? "s" : "");
                                color: white;
                                font-weight: 400;
                            }
                        }
                    }
                }
            }
        }


        Rectangle {
            x: root.width - self.width - 20px;
            y: 20px;

            width: 100px;
            height: 100px;

            Text {
                text: seconds_to_logout;
            }

            Path {
                stroke-width: 5px;
                stroke: #6b6b6b;
                viewbox-x: 0;
                viewbox-y: 0;
                viewbox-width: 100;
                viewbox-height: 100;
                
                MoveTo {
                    x: 50;
                    y: 10;
                }
                ArcTo {
                    radius-x: 40;
                    radius-y: 40;
                    x-rotation: 0;
                    large-arc: true;
                    sweep: true;
                    x: 50;
                    y: 90;
                }
                ArcTo {
                    radius-x: 40;
                    radius-y: 40;
                    x-rotation: 0;
                    large-arc: true;
                    sweep: true;
                    x: 50;
                    y: 10;
                }
            }

            Path {
                stroke-width: 5px;
                stroke: #e0e0e0;
                viewbox-x: 0;
                viewbox-y: 0;
                viewbox-width: 100;
                viewbox-height: 100;
                
                MoveTo {
                    x: 50;
                    y: 10;
                }

                ArcTo {
                    radius-x: 40;
                    radius-y: 40;
                    x-rotation: 0;
                    large-arc: percent_to_logout > 0.5;
                    sweep: true;
                    x: 50+40*sin(percent_to_logout*360deg);
                    y: 50-40*cos(percent_to_logout*360deg);
                }
            }
        }
        
    }
}
